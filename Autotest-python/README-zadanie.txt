
Ресурс: https://demoqa.com
Задания со * не являются обязательными.

Сами задания:

1) Повторить задание, которое давалось на практике
2) В разделе /upload-download загрузить файл с локальной системы компьютера и проверить, что файл загружается на сайт (появляется путь до файла). Имя должно совпадать.

3) В разделе /dynamic-properties нажать на кнопки "Enable After" и "Visible After 5 Seconds". 
*Реализовать метод, который будет опрашивать систему, ожидая появление элемент (явное ожидание). 
def waiting_for_element(element_id, timeout): # element_id - id элемента, timeout - время после которого поиски прекращаются

4) В разделе /webtables нужно добавить пользователя по кнопке Add, проверить что пользователь добавлен. 

Имя может состоять только из латинских букв.
Возраст не должен быть меньше 18 лет. 
Зарплата должна быть в диапазоне от 2000 до 20000. 
Существует всего 4 департамента: Insurance, Compliance, Legal, Marketing

*Реализовать отдельный метод по добавлению пользователя.  
Переключиться на выдачу по 5 элементов на страницу.  
Заполнить таблицу 10 новыми пользователями со случайно генерируемыми именами. Можно использовать словарь имен. 
Проверить что изменилось число страниц для выдачи.
По кнопке Next переходим на следующую страницу с записями. 
Проверить переход через поле для ввода в разделе -pageInfo

5) В разделе /webtables нужно отредактировать пользователя. Верифицровать, что операция успешна.

6) В разделе /webtables нужно проверить поиск по таблице. Верифицровать, что операция успешна.

7) В разделе /webtables нужно проверить удаление пользователя. Верифицровать, что операция успешна.

8) В разделе /browser-windows проверить открытие новой вкладки (New Tab). Если вкладку закрыть, то мы должны вернуться на прошлую вкладку и проверить ее заголовок. 
Вывести список активных кнопок (3 шт).

9) В разделе /alerts проверить содержимое сообщения по клику на "Click Button to see alert".  
* Проверить работу всех кнопок используя явные ожидания, а не просто sleep.

*10) В разделе /sortable реализовать перемещение объектов по методу drag'n'drop. Сделать это не по абсолютным значениям, а по относительным.
Сделать метод, который позволяет поменять местами два элемента. def swap_elements(number_one, number_two):
Пример: было One, Two, Three, Four, Five, Six
swap_elements(3, 6):
Стало: One, Two, Six, Four, Five, Three
